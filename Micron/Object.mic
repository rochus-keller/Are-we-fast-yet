(* Copyright (c) 2024 Rochus Keller <me@rochus-keller.ch>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the 'Software'), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *)
 
module Object

type
  Object* = record
    deinit: procedure(obj: ^Object)
    refCount: integer
  end

procedure init*(obj: ^Object; deinitProc: procedure(obj: ^Object))
begin
  if obj # nil then
    obj.deinit := deinitProc
    obj.refCount := 0
  end
end init

procedure addRef*(obj: ^Object)
begin
  if obj # nil then
    inc(obj.refCount)
  end
end addRef

procedure release*(obj: ^Object)
begin
  if obj # nil then
    dec(obj.refCount)
    if obj.refCount = 0 then
      if obj.deinit # nil then
        obj.deinit(obj)
      end
      dispose(obj)
    end
  end
end release

end Object

